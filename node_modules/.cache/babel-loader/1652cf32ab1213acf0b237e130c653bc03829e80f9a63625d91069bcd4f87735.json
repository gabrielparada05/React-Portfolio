{"ast":null,"code":"// import React from 'react';\nimport React, { useState, useEffect, useContext } from 'react';\nimport { Navbar, MobileNav, Typography, Button, IconButton } from \"@material-tailwind/react\";\n\n// Here we are using object destructuring assignment to pluck off our variables from the props object\n// We assign them to their own variable names\n// export default function NavTabs({ currentPage, handlePageChange }) {\n//   return (\n//     <ul className=\"nav nav-tabs\">\n//       <li className=\"nav-item\">\n//         <a\n//           href=\"#About\"\n//           onClick={() => handlePageChange('About')}\n//           // This is a conditional (ternary) operator that checks to see if the current page is \"About\"\n//           // If it is, we set the current page to 'nav-link-active', otherwise we set it to 'nav-link'\n//           className={currentPage === 'About' ? 'nav-link active' : 'nav-link'}\n//         >\n//           Home\n//         </a>\n//       </li>\n//       <li className=\"nav-item\">\n//         <a\n//           href=\"#Projects\"\n//           onClick={() => handlePageChange('Projects')}\n//           // Check to see if the currentPage is `Project`, and if so we use the active link class from bootstrap. Otherwise, we set it to a normal nav-link\n//           className={currentPage === 'Projects' ? 'nav-link active' : 'nav-link'}\n//         >\n//           Projects\n//         </a>\n//       </li>\n//       <li className=\"nav-item\">\n//         <a\n//           href=\"#Contact\"\n//           onClick={() => handlePageChange('Contact')}\n//           // Check to see if the currentPage is `Contact`, and if so we use the active link class from bootstrap. Otherwise, we set it to a normal nav-link\n//           className={currentPage === 'Contact' ? 'nav-link active' : 'nav-link'}\n//         >\n//           Contact Me\n//         </a>\n//       </li>\n//       <li className=\"nav-item\">\n//         <a\n//           href=\"#Resume\"\n//           onClick={() => handlePageChange('Resume')}\n//           // Check to see if the currentPage is `Resume`, and if so we use the active link class from bootstrap. Otherwise, we set it to a normal nav-link\n//           className={currentPage === 'Resume' ? 'nav-link active' : 'nav-link'}\n//         >\n//           Resume\n//         </a>\n//       </li>\n//     </ul>\n//   );\n// }\n\n// export default function NavTabs({ currentPage, handlePageChange }) {\n//   const [openNav, setOpenNav] = useState(false);\n\n//  useEffect(() => {\n//     window.addEventListener(\n//       \"resize\",\n//       () => window.innerWidth >= 960 && setOpenNav(false)\n//     );\n//   }, []);\n\n//   const navList = (\n//     <ul className=\"mb-4 mt-2 flex flex-col gap-2 lg:mb-0 lg:mt-0 lg:flex-row lg:items-center lg:gap-6\">\n//       <Typography\n//         as=\"li\"\n//         variant=\"small\"\n//         color=\"blue-gray\"\n//         className=\"p-1 font-normal\"\n//       >\n//         <a href=\"#About\" className=\"flex items-center\">\n//           About\n//         </a>\n//       </Typography>\n//       <Typography\n//         as=\"li\"\n//         variant=\"small\"\n//         color=\"blue-gray\"\n//         className=\"p-1 font-normal\"\n//       >\n//         <a href=\"#Projects\" className=\"flex items-center\">\n//           Projects\n//         </a>\n//       </Typography>\n//       <Typography\n//         as=\"li\"\n//         variant=\"small\"\n//         color=\"blue-gray\"\n//         className=\"p-1 font-normal\"\n//       >\n//         <a href=\"#Resume\" className=\"flex items-center\">\n//           Resume\n//         </a>\n//       </Typography>\n//       <Typography\n//         as=\"li\"\n//         variant=\"small\"\n//         color=\"blue-gray\"\n//         className=\"p-1 font-normal\"\n//       >\n//         <a href=\"#Contact\" className=\"flex items-center\">\n//           Contact Me\n//         </a>\n//       </Typography>\n//     </ul>\n//   );\n\n//   return (\n//     <>\n//       <Navbar className=\"sticky top z-10 h-max max-w-full rounded-none py-2 px-4 lg:px-8 lg:py-4\">\n//         <div className=\"flex items-center justify-between text-blue-gray-900\">\n//           <Typography\n//             as=\"a\"\n//             href=\"#About\"\n//             className=\"mr-4 cursor-pointer py-1.5 font-medium\"\n//           >\n//             Gabriel Parada\n//           </Typography>\n//           <div className=\"flex items-center gap-4\">\n//             <div className=\"mr-4 hidden lg:block\">{navList}</div>\n//             <Button\n//               variant=\"gradient\"\n//               size=\"sm\"\n//               className=\"hidden lg:inline-block\"\n//             >\n//               <span>Buy Now</span>\n//             </Button>\n//             <IconButton\n//               variant=\"text\"\n//               className=\"ml-auto h-6 w-6 text-inherit hover:bg-transparent focus:bg-transparent active:bg-transparent lg:hidden\"\n//               ripple={false}\n//               onClick={() => setOpenNav(!openNav)}\n//             >\n//               {openNav ? (\n//                 <svg\n//                   xmlns=\"http://www.w3.org/2000/svg\"\n//                   fill=\"none\"\n//                   className=\"h-6 w-6\"\n//                   viewBox=\"0 0 24 24\"\n//                   stroke=\"currentColor\"\n//                   strokeWidth={2}\n//                 >\n//                   <path\n//                     strokeLinecap=\"round\"\n//                     strokeLinejoin=\"round\"\n//                     d=\"M6 18L18 6M6 6l12 12\"\n//                   />\n//                 </svg>\n//               ) : (\n//                 <svg\n//                   xmlns=\"http://www.w3.org/2000/svg\"\n//                   className=\"h-6 w-6\"\n//                   fill=\"none\"\n//                   stroke=\"currentColor\"\n//                   strokeWidth={2}\n//                 >\n//                   <path\n//                     strokeLinecap=\"round\"\n//                     strokeLinejoin=\"round\"\n//                     d=\"M4 6h16M4 12h16M4 18h16\"\n//                   />\n//                 </svg>\n//               )}\n//             </IconButton>\n//           </div>\n//         </div>\n//         <MobileNav open={openNav}>\n//           {navList}\n\n//         </MobileNav>\n//       </Navbar>\n//     </>\n//   );\n// }","map":{"version":3,"names":["React","useState","useEffect","useContext","Navbar","MobileNav","Typography","Button","IconButton"],"sources":["C:/Users/gabri/Bootcamp/Challenges/React-Portfolio/portfolio/src/components/NavTabs.js"],"sourcesContent":["// import React from 'react';\nimport React, { useState, useEffect, useContext } from 'react';\n\nimport {\n  Navbar,\n  MobileNav,\n  Typography,\n  Button,\n  IconButton,\n} from \"@material-tailwind/react\"\n\n// Here we are using object destructuring assignment to pluck off our variables from the props object\n// We assign them to their own variable names\n// export default function NavTabs({ currentPage, handlePageChange }) {\n//   return (\n//     <ul className=\"nav nav-tabs\">\n//       <li className=\"nav-item\">\n//         <a\n//           href=\"#About\"\n//           onClick={() => handlePageChange('About')}\n//           // This is a conditional (ternary) operator that checks to see if the current page is \"About\"\n//           // If it is, we set the current page to 'nav-link-active', otherwise we set it to 'nav-link'\n//           className={currentPage === 'About' ? 'nav-link active' : 'nav-link'}\n//         >\n//           Home\n//         </a>\n//       </li>\n//       <li className=\"nav-item\">\n//         <a\n//           href=\"#Projects\"\n//           onClick={() => handlePageChange('Projects')}\n//           // Check to see if the currentPage is `Project`, and if so we use the active link class from bootstrap. Otherwise, we set it to a normal nav-link\n//           className={currentPage === 'Projects' ? 'nav-link active' : 'nav-link'}\n//         >\n//           Projects\n//         </a>\n//       </li>\n//       <li className=\"nav-item\">\n//         <a\n//           href=\"#Contact\"\n//           onClick={() => handlePageChange('Contact')}\n//           // Check to see if the currentPage is `Contact`, and if so we use the active link class from bootstrap. Otherwise, we set it to a normal nav-link\n//           className={currentPage === 'Contact' ? 'nav-link active' : 'nav-link'}\n//         >\n//           Contact Me\n//         </a>\n//       </li>\n//       <li className=\"nav-item\">\n//         <a\n//           href=\"#Resume\"\n//           onClick={() => handlePageChange('Resume')}\n//           // Check to see if the currentPage is `Resume`, and if so we use the active link class from bootstrap. Otherwise, we set it to a normal nav-link\n//           className={currentPage === 'Resume' ? 'nav-link active' : 'nav-link'}\n//         >\n//           Resume\n//         </a>\n//       </li>\n//     </ul>\n//   );\n// }\n\n\n\n// export default function NavTabs({ currentPage, handlePageChange }) {\n//   const [openNav, setOpenNav] = useState(false);\n \n//  useEffect(() => {\n//     window.addEventListener(\n//       \"resize\",\n//       () => window.innerWidth >= 960 && setOpenNav(false)\n//     );\n//   }, []);\n \n//   const navList = (\n//     <ul className=\"mb-4 mt-2 flex flex-col gap-2 lg:mb-0 lg:mt-0 lg:flex-row lg:items-center lg:gap-6\">\n//       <Typography\n//         as=\"li\"\n//         variant=\"small\"\n//         color=\"blue-gray\"\n//         className=\"p-1 font-normal\"\n//       >\n//         <a href=\"#About\" className=\"flex items-center\">\n//           About\n//         </a>\n//       </Typography>\n//       <Typography\n//         as=\"li\"\n//         variant=\"small\"\n//         color=\"blue-gray\"\n//         className=\"p-1 font-normal\"\n//       >\n//         <a href=\"#Projects\" className=\"flex items-center\">\n//           Projects\n//         </a>\n//       </Typography>\n//       <Typography\n//         as=\"li\"\n//         variant=\"small\"\n//         color=\"blue-gray\"\n//         className=\"p-1 font-normal\"\n//       >\n//         <a href=\"#Resume\" className=\"flex items-center\">\n//           Resume\n//         </a>\n//       </Typography>\n//       <Typography\n//         as=\"li\"\n//         variant=\"small\"\n//         color=\"blue-gray\"\n//         className=\"p-1 font-normal\"\n//       >\n//         <a href=\"#Contact\" className=\"flex items-center\">\n//           Contact Me\n//         </a>\n//       </Typography>\n//     </ul>\n//   );\n \n//   return (\n//     <>\n//       <Navbar className=\"sticky top z-10 h-max max-w-full rounded-none py-2 px-4 lg:px-8 lg:py-4\">\n//         <div className=\"flex items-center justify-between text-blue-gray-900\">\n//           <Typography\n//             as=\"a\"\n//             href=\"#About\"\n//             className=\"mr-4 cursor-pointer py-1.5 font-medium\"\n//           >\n//             Gabriel Parada\n//           </Typography>\n//           <div className=\"flex items-center gap-4\">\n//             <div className=\"mr-4 hidden lg:block\">{navList}</div>\n//             <Button\n//               variant=\"gradient\"\n//               size=\"sm\"\n//               className=\"hidden lg:inline-block\"\n//             >\n//               <span>Buy Now</span>\n//             </Button>\n//             <IconButton\n//               variant=\"text\"\n//               className=\"ml-auto h-6 w-6 text-inherit hover:bg-transparent focus:bg-transparent active:bg-transparent lg:hidden\"\n//               ripple={false}\n//               onClick={() => setOpenNav(!openNav)}\n//             >\n//               {openNav ? (\n//                 <svg\n//                   xmlns=\"http://www.w3.org/2000/svg\"\n//                   fill=\"none\"\n//                   className=\"h-6 w-6\"\n//                   viewBox=\"0 0 24 24\"\n//                   stroke=\"currentColor\"\n//                   strokeWidth={2}\n//                 >\n//                   <path\n//                     strokeLinecap=\"round\"\n//                     strokeLinejoin=\"round\"\n//                     d=\"M6 18L18 6M6 6l12 12\"\n//                   />\n//                 </svg>\n//               ) : (\n//                 <svg\n//                   xmlns=\"http://www.w3.org/2000/svg\"\n//                   className=\"h-6 w-6\"\n//                   fill=\"none\"\n//                   stroke=\"currentColor\"\n//                   strokeWidth={2}\n//                 >\n//                   <path\n//                     strokeLinecap=\"round\"\n//                     strokeLinejoin=\"round\"\n//                     d=\"M4 6h16M4 12h16M4 18h16\"\n//                   />\n//                 </svg>\n//               )}\n//             </IconButton>\n//           </div>\n//         </div>\n//         <MobileNav open={openNav}>\n//           {navList}\n      \n//         </MobileNav>\n//       </Navbar>\n//     </>\n//   );\n// }"],"mappings":"AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AAE9D,SACEC,MAAM,EACNC,SAAS,EACTC,UAAU,EACVC,MAAM,EACNC,UAAU,QACL,0BAA0B;;AAEj},"metadata":{},"sourceType":"module","externalDependencies":[]}