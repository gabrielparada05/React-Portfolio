{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gabri\\\\Bootcamp\\\\Challenges\\\\React-Portfolio\\\\portfolio\\\\src\\\\components\\\\pages\\\\Contact.js\";\nimport React from 'react';\nimport { useFormik } from 'formik';\nimport emailjs from '@emailjs/browser';\n\n// email sender \n\n//  const validate = (values) => {\n//   const errors = {}\n\n//   if (!values.email) {\n//     errors.email = 'Required'\n//   } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n//     errors.email = 'Invalid email address'\n//   }\n\n//   return errors\n// }\n\n// export default function Contact() {\n\n//   const handleSubmit = (event) => {\n//     event.preventDefault();\n\n//     // Get the form values\n//     const name = event.target.name.value;\n//     const email = event.target.email.value;\n//     const message = event.target.message.value;\n\n//     // Create the email parameters\n//     const params = {\n//       from_name: name,\n//       from_email: email,\n//       message: message\n//     };\n\n//     // Send the email\n//     emailjs.send('service_4bz76nx', 'template_antjpxu', params, 'm-q4iPuK6x4vj7Zo2')\n//     .then((response) => {\n//       console.log('Email sent successfully!', response.status, response.text);\n\n//     })\n//       .catch((error) => {\n//         console.error('Error sending email:', error);\n//         // Add any error handling code or display an error message\n//       });\n//   };\n\n// // validate email\n//   const formik = useFormik({\n//     initialValues: {\n//       email: '',\n//     },\n//     validate,\n//     onSubmit: (values) => {\n//       alert(JSON.stringify(values, null, 2))\n//     },\n//   })\n\n// /// validate message \n\n//   return (\n//     <section id=\"contact\" className=\"relative\">\n//     <div className=\"flex justify-center\">\n//       <form onSubmit={handleSubmit}\n//         name=\"contact\"\n//         className=\"flex flex-col w-50\">\n//         <h2 className=\"text-white sm:text-4xl text-3xl mb-1 font-medium title-font\">\n//           Contact\n//         </h2>\n//         <p className=\"leading-relaxed mb-5\">\n//         On my contact page, I provide a convenient way for you to get in touch with me. Whether you have a project idea, a question, or simply want to say hello, I'm always ready to listen and collaborate. \n//         Feel free to fill out the contact form with your name, email address, and message, and I'll make sure to respond promptly.\n//         </p>\n//         <div className=\"relative mb-4\">\n//           <label htmlFor=\"name\" className=\"leading-7 text-sm text-gray-400\">\n//             Name\n//           </label>\n//           <input\n//             type=\"text\"\n//             id=\"name\"\n//             name=\"name\"\n//             minLength={2}\n//           maxLength={20}\n//             className=\"w-full bg-gray-800 rounded border border-gray-700 focus:border-indigo-500 focus:ring-2 focus:ring-indigo-900 text-base outline-none text-gray-100 py-1 px-3 leading-8 transition-colors duration-200 ease-in-out hover:brightness-200\"\n//           />\n//         </div>\n//         <div className=\"relative mb-4\">\n//           <label htmlFor=\"email\" className=\"leading-7 text-sm text-gray-400\">\n//             Email\n//           </label>\n//           <input\n//             type=\"email\"\n//             id=\"email\"\n//             name=\"email\"\n//             className=\"w-full bg-gray-800 rounded border border-gray-700 focus:border-indigo-500 focus:ring-2 focus:ring-indigo-900 text-base outline-none text-gray-100 py-1 px-3 leading-8 transition-colors duration-200 ease-in-out hover:brightness-200\"\n//             onChange={formik.handleChange} onBlur={formik.handleBlur} value={formik.values.email} />\n//             {formik.touched.email && formik.errors.email && (\n//             <span>{formik.errors.email}</span>\n//           )}\n//         </div>\n//         <div className=\"relative mb-4\">\n//           <label\n//             htmlFor=\"message\"\n//             className=\"leading-7 text-sm text-gray-400\"\n//             name=\"message\"\n//             >\n//             Message\n//           </label>\n//           <textarea\n//             id=\"message\"\n//             name=\"message\"   \n//             minLength={5}\n//             maxLength={100} \n//             className=\"w-full bg-gray-800 rounded border border-gray-700 focus:border-indigo-500 focus:ring-2 focus:ring-indigo-900 h-32 text-base outline-none text-gray-100 py-1 px-3 resize-none leading-6 transition-colors duration-200 ease-in-out hover:brightness-200\"\n//           />\n//         </div>\n//         <button\n//           type=\"submit\"\n//           className=\"text-white bg-indigo-500 border-0 py-2 px-6 focus:outline-none hover:bg-indigo-600 rounded text-lg\">\n//           Submit\n//         </button>\n//       </form>\n//     </div>\n//   </section>\n//   );\n// }\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Modal(_ref) {\n  let {\n    setOpenModal\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modalBackground\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modalContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"titleCloseBtn\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            setOpenModal(false);\n          },\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Are You Sure You Want to Continue?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"body\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"The next page looks amazing. Hope you want to go there!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"footer\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            setOpenModal(false);\n          },\n          id: \"cancelBtn\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Continue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 5\n  }, this);\n}\n_c = Modal;\nvar _c;\n$RefreshReg$(_c, \"Modal\");","map":{"version":3,"names":["React","useFormik","emailjs","jsxDEV","_jsxDEV","Modal","_ref","setOpenModal","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","id","_c","$RefreshReg$"],"sources":["C:/Users/gabri/Bootcamp/Challenges/React-Portfolio/portfolio/src/components/pages/Contact.js"],"sourcesContent":["import React from 'react';\nimport { useFormik } from 'formik';\nimport emailjs from '@emailjs/browser';\n\n// email sender \n\n\n\n//  const validate = (values) => {\n//   const errors = {}\n\n//   if (!values.email) {\n//     errors.email = 'Required'\n//   } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n//     errors.email = 'Invalid email address'\n//   }\n\n//   return errors\n// }\n\n\n// export default function Contact() {\n\n//   const handleSubmit = (event) => {\n//     event.preventDefault();\n\n//     // Get the form values\n//     const name = event.target.name.value;\n//     const email = event.target.email.value;\n//     const message = event.target.message.value;\n\n//     // Create the email parameters\n//     const params = {\n//       from_name: name,\n//       from_email: email,\n//       message: message\n//     };\n\n//     // Send the email\n//     emailjs.send('service_4bz76nx', 'template_antjpxu', params, 'm-q4iPuK6x4vj7Zo2')\n//     .then((response) => {\n//       console.log('Email sent successfully!', response.status, response.text);\n  \n//     })\n//       .catch((error) => {\n//         console.error('Error sending email:', error);\n//         // Add any error handling code or display an error message\n//       });\n//   };\n\n\n  \n// // validate email\n//   const formik = useFormik({\n//     initialValues: {\n//       email: '',\n//     },\n//     validate,\n//     onSubmit: (values) => {\n//       alert(JSON.stringify(values, null, 2))\n//     },\n//   })\n\n// /// validate message \n\n\n\n//   return (\n//     <section id=\"contact\" className=\"relative\">\n//     <div className=\"flex justify-center\">\n//       <form onSubmit={handleSubmit}\n//         name=\"contact\"\n//         className=\"flex flex-col w-50\">\n//         <h2 className=\"text-white sm:text-4xl text-3xl mb-1 font-medium title-font\">\n//           Contact\n//         </h2>\n//         <p className=\"leading-relaxed mb-5\">\n//         On my contact page, I provide a convenient way for you to get in touch with me. Whether you have a project idea, a question, or simply want to say hello, I'm always ready to listen and collaborate. \n//         Feel free to fill out the contact form with your name, email address, and message, and I'll make sure to respond promptly.\n//         </p>\n//         <div className=\"relative mb-4\">\n//           <label htmlFor=\"name\" className=\"leading-7 text-sm text-gray-400\">\n//             Name\n//           </label>\n//           <input\n//             type=\"text\"\n//             id=\"name\"\n//             name=\"name\"\n//             minLength={2}\n//           maxLength={20}\n//             className=\"w-full bg-gray-800 rounded border border-gray-700 focus:border-indigo-500 focus:ring-2 focus:ring-indigo-900 text-base outline-none text-gray-100 py-1 px-3 leading-8 transition-colors duration-200 ease-in-out hover:brightness-200\"\n//           />\n//         </div>\n//         <div className=\"relative mb-4\">\n//           <label htmlFor=\"email\" className=\"leading-7 text-sm text-gray-400\">\n//             Email\n//           </label>\n//           <input\n//             type=\"email\"\n//             id=\"email\"\n//             name=\"email\"\n//             className=\"w-full bg-gray-800 rounded border border-gray-700 focus:border-indigo-500 focus:ring-2 focus:ring-indigo-900 text-base outline-none text-gray-100 py-1 px-3 leading-8 transition-colors duration-200 ease-in-out hover:brightness-200\"\n//             onChange={formik.handleChange} onBlur={formik.handleBlur} value={formik.values.email} />\n//             {formik.touched.email && formik.errors.email && (\n//             <span>{formik.errors.email}</span>\n//           )}\n//         </div>\n//         <div className=\"relative mb-4\">\n//           <label\n//             htmlFor=\"message\"\n//             className=\"leading-7 text-sm text-gray-400\"\n//             name=\"message\"\n//             >\n//             Message\n//           </label>\n//           <textarea\n//             id=\"message\"\n//             name=\"message\"   \n//             minLength={5}\n//             maxLength={100} \n//             className=\"w-full bg-gray-800 rounded border border-gray-700 focus:border-indigo-500 focus:ring-2 focus:ring-indigo-900 h-32 text-base outline-none text-gray-100 py-1 px-3 resize-none leading-6 transition-colors duration-200 ease-in-out hover:brightness-200\"\n//           />\n//         </div>\n//         <button\n//           type=\"submit\"\n//           className=\"text-white bg-indigo-500 border-0 py-2 px-6 focus:outline-none hover:bg-indigo-600 rounded text-lg\">\n//           Submit\n//         </button>\n//       </form>\n//     </div>\n//   </section>\n//   );\n// }\n\n\nfunction Modal({ setOpenModal }) {\n  return (\n    <div className=\"modalBackground\">\n      <div className=\"modalContainer\">\n        <div className=\"titleCloseBtn\">\n          <button\n            onClick={() => {\n              setOpenModal(false);\n            }}\n          >\n            X\n          </button>\n        </div>\n        <div className=\"title\">\n          <h1>Are You Sure You Want to Continue?</h1>\n        </div>\n        <div className=\"body\">\n          <p>The next page looks amazing. Hope you want to go there!</p>\n        </div>\n        <div className=\"footer\">\n          <button\n            onClick={() => {\n              setOpenModal(false);\n            }}\n            id=\"cancelBtn\"\n          >\n            Cancel\n          </button>\n          <button>Continue</button>\n        </div>\n      </div>\n    </div>\n  );\n}"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,QAAQ;AAClC,OAAOC,OAAO,MAAM,kBAAkB;;AAEtC;;AAIA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAGA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGA,SAASC,KAAKA,CAAAC,IAAA,EAAmB;EAAA,IAAlB;IAAEC;EAAa,CAAC,GAAAD,IAAA;EAC7B,oBACEF,OAAA;IAAKI,SAAS,EAAC,iBAAiB;IAAAC,QAAA,eAC9BL,OAAA;MAAKI,SAAS,EAAC,gBAAgB;MAAAC,QAAA,gBAC7BL,OAAA;QAAKI,SAAS,EAAC,eAAe;QAAAC,QAAA,eAC5BL,OAAA;UACEM,OAAO,EAAEA,CAAA,KAAM;YACbH,YAAY,CAAC,KAAK,CAAC;UACrB,CAAE;UAAAE,QAAA,EACH;QAED;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,eACNV,OAAA;QAAKI,SAAS,EAAC,OAAO;QAAAC,QAAA,eACpBL,OAAA;UAAAK,QAAA,EAAI;QAAkC;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxC,CAAC,eACNV,OAAA;QAAKI,SAAS,EAAC,MAAM;QAAAC,QAAA,eACnBL,OAAA;UAAAK,QAAA,EAAG;QAAuD;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3D,CAAC,eACNV,OAAA;QAAKI,SAAS,EAAC,QAAQ;QAAAC,QAAA,gBACrBL,OAAA;UACEM,OAAO,EAAEA,CAAA,KAAM;YACbH,YAAY,CAAC,KAAK,CAAC;UACrB,CAAE;UACFQ,EAAE,EAAC,WAAW;UAAAN,QAAA,EACf;QAED;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACTV,OAAA;UAAAK,QAAA,EAAQ;QAAQ;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACE,EAAA,GAjCQX,KAAK;AAAA,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}