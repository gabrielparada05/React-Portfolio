{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gabri\\\\Bootcamp\\\\Challenges\\\\React-Portfolio\\\\portfolio\\\\src\\\\components\\\\PortfolioContainer.js\";\nimport React, { useState } from 'react';\nimport NavTabs from './NavTabs';\nimport About from './pages/About';\nimport Resume from './pages/Resume';\nimport Projects from './pages/Projects';\nimport Contact from './pages/Contact';\nimport Footer from './Footer';\nimport '../styles/style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PortfolioContainer() {\n  // const [currentPage, setCurrentPage] = useState('About');\n\n  // // This method is checking to see what the value of `currentPage` is. Depending on the value of currentPage, we return the corresponding component to render.\n  // const renderPage = () => {\n  //   if (currentPage === 'About') {\n  //     return <About />;\n  //   }\n  //   if (currentPage === 'Resume') {\n  //     return <Resume />;\n  //   }\n  //   if (currentPage === 'Projects') {\n  //     return <Projects />;\n  //   }\n  //   return <Contact />;\n  // };\n\n  // const handlePageChange = (page) => setCurrentPage(page);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NavTabs, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), renderPage(), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_c = PortfolioContainer;\nvar _c;\n$RefreshReg$(_c, \"PortfolioContainer\");","map":{"version":3,"names":["React","useState","NavTabs","About","Resume","Projects","Contact","Footer","jsxDEV","_jsxDEV","PortfolioContainer","children","fileName","_jsxFileName","lineNumber","columnNumber","renderPage","_c","$RefreshReg$"],"sources":["C:/Users/gabri/Bootcamp/Challenges/React-Portfolio/portfolio/src/components/PortfolioContainer.js"],"sourcesContent":["import React, { useState } from 'react';\nimport NavTabs from './NavTabs';\nimport About from './pages/About';\nimport Resume from './pages/Resume';\nimport Projects from './pages/Projects';\nimport Contact from './pages/Contact';\nimport Footer from './Footer';\n\nimport '../styles/style.css'\n\nexport default function PortfolioContainer() {\n  // const [currentPage, setCurrentPage] = useState('About');\n\n  // // This method is checking to see what the value of `currentPage` is. Depending on the value of currentPage, we return the corresponding component to render.\n  // const renderPage = () => {\n  //   if (currentPage === 'About') {\n  //     return <About />;\n  //   }\n  //   if (currentPage === 'Resume') {\n  //     return <Resume />;\n  //   }\n  //   if (currentPage === 'Projects') {\n  //     return <Projects />;\n  //   }\n  //   return <Contact />;\n  // };\n\n  // const handlePageChange = (page) => setCurrentPage(page);\n\n  return (\n    <div >\n      {/* We are passing the currentPage from state and the function to update it */}\n      <NavTabs  />\n      {/* Here we are calling the renderPage method which will return a component  */}\n      {renderPage()}\n      <Footer  />\n    </div>\n  );\n}\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,KAAK,MAAM,eAAe;AACjC,OAAOC,MAAM,MAAM,gBAAgB;AACnC,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAOC,OAAO,MAAM,iBAAiB;AACrC,OAAOC,MAAM,MAAM,UAAU;AAE7B,OAAO,qBAAqB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE5B,eAAe,SAASC,kBAAkBA,CAAA,EAAG;EAC3C;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;;EAEA,oBACED,OAAA;IAAAE,QAAA,gBAEEF,OAAA,CAACP,OAAO;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,EAEXC,UAAU,CAAC,CAAC,eACbP,OAAA,CAACF,MAAM;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEV;AAACE,EAAA,GA5BuBP,kBAAkB;AAAA,IAAAO,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}